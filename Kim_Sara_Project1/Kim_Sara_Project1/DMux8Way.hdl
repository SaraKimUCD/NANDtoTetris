// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=notSel0);
    Not(in=sel[1], out=notSel1);
    Not(in=sel[2], out=notSel2);

    And(a=notSel0, b=notSel1, out=o1);
    And(a=o1, b=notSel2, out=out1);
    And(a=sel[0], b= notSel1, out=o2);
    And(a=o2, b=notSel2, out=out2);
    And(a=notSel0, b=sel[1], out=o3);
    And(a=o3, b=notSel2, out=out3);
    And(a=sel[0], b=sel[1], out=o4);
    And(a=o4, b=notSel2, out=out4);
    And(a=notSel0, b=notSel1, out=o5);
    And(a=o5, b=sel[2], out=out5);    
    And(a=sel[0], b=notSel1, out=o6);
    And(a=o6, b=sel[2], out=out6);
    And(a=notSel0, b=sel[1], out=o7);
    And(a=o7, b=sel[2], out=out7);
    And(a=sel[0], b=sel[1], out=o8);
    And(a=o8, b=sel[2], out=out8);

    And(a=in, b=out1, out=a);
    And(a=in, b=out2, out=b);
    And(a=in, b=out3, out=c);
    And(a=in, b=out4, out=d);
    And(a=in, b=out5, out=e);
    And(a=in, b=out6, out=f);
    And(a=in, b=out7, out=g);
    And(a=in, b=out8, out=h);        
}